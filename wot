#!/bin/bash
# wot - permite generar una wot en una organización
#
# © 2016 fauno <fauno@partidopirata.com.ar>
#
# Copying and distribution of this file, with or without modification,
# are permitted in any medium without royalty provided the copyright
# notice and this notice are preserved.  This file is offered as-is,
# without any warranty.
# 
# http://www.gnu.org/prep/maintain/html_node/License-Notices-for-Other-Files.html

method="${1:-help}" ; shift
domain="${1:-partidopirata.com.ar}" ; shift

set -e
set -E

wot="${domain}.wot.asc"
methods=()
helps=()

# Chequea que no estamos sourceando
function es_init() {
  test 'xwot' = "x$(basename -- "$0")"
}

# Registra métodos permitidos
function registrar() {
  local _method="${1}"; shift
  methods+=(${_method})
  helps+=("${_method}:${@};")
}

# Ayuda
function help() {
  echo 'wot!'
  echo "genera una red de confianza entre todas las cuentas de ${domain}"
  echo
  echo 'uso:'
  echo '  wot COMANDO DOMINIO OPCIONES'
  echo
  echo 'ej:'
  echo '  wot listar'
  echo '  wot enviar partidopirata.com.ar hola te mando las llaves'
  echo
  echo ${helps[@]} \
  | tr ';' "\n" \
  | sed -re 's/^\s+//' -e 's/\s+$//' \
  | column -s : -o ' - ' -t
}
registrar help 'esta ayuda'


function listar() {
  gpg --fingerprint "@${domain}" \
  | grep -A 2 "^pub " \
  | grep -v = \
  | grep -oE "0x[A-F0-9]+|<[^>]+>" \
  | tr -d "<" \
  | tr -d ">" \
  | paste - -
}
registrar listar 'muestra una lista de llaves y direcciones'

# Exporta todas las llaves a un archivo WOT
function exportar() {
  gpg --export --armor "@${domain}" >"${wot}"
}
registrar exportar "crea un archivo ${wot} para compartir"

# Importa el archivo de WOT
function importar() {
  gpg --import "${wot}"
}
registrar importar "importa ${wot} desde este directorio"

# Trae todas las llaves de la WOT y las firmas
function firmar() {
  gpg --fingerprint "@${domain}" \
	| grep = \
  | cut -d = -f2 \
  | tr -d " " \
  | sort -u \
  | xargs -rn1 gpg --sign-key
}
registrar firmar 'firma todas las llaves'

function graficar() {
  local _path="$(dirname -- "$0")"
  local _dot="${wot%.asc}.dot"
  local _png="${wot%.asc}.png"

  gpg --list-sigs "@${domain}" \
  | "${_path}/sig2dot" >"${_dot}" 2>/dev/null

  circo -Tpng "${_dot}" >"${_png}"
}
registrar graficar "genera un grafico ${wot%.asc}.png"

function enviar() {
  listar \
  | while read _llave _email; do
    echo "Enviando llave a ${_email}" >&2
    echo -e "Hola!  Importá el llavero adjunto\n\n$@" \
    | mail -a "${wot}" -s 'wot!' "${_email}"
  done
}
registrar enviar "envía el llavero a todas las participantes, con un mensaje opcional"

# Ejecuta el comando que llamamos
function init() {
  # Valida que estemos llamando a un metodo que exista :P
  echo "${methods[@]}" | grep -qw "${method}" || exit 1
  shift;

  ${method} $@
}

# Solo ejecuta la función de inicio si estamos ejecutando el script,
# no si lo estamos importando desde otro.
es_init && init ${method} $@
